### Der Datensatz ist in Form einer Dataframe darzustellen.
## Alter:
#wir haben einfach einen Vektor erstellet mit den Alter, sodass sie normal verteilt sind.
alter = round(rnorm(100,sd= 2,mean = 25))
##Studienfach:
#Analoge zum Alter aber wir haben statistik und Data Science mehrmals geschrieben um "haufiger"
#zu simulieren
fach = c(rep("Statistik",5),rep("Data Science",5),"Mathe",
rep("Informatik",3))
studienfach = sample(fach,100,replace = TRUE)
##Interesse_an_mathematik:
# Zusammenhang zwischen den Fachstudiengaengen und dem Interesse an Mathematik:
# absteigende Sortierung: - Mathematik
#                         - Statistik
#                         - Data Science
#                         - Informatik
#Normalerweiser magen die Studenten, derjenigen mathe studieren, deswegen h√∂rere Anzahlen haufiger
#vorkommen. Dann nutzen wir dies neu Vektor um das Interesse an Mathe auf die Leute verteilen, die
#mathe  studieren
mathe_mathe = c(rep(1,1),rep(1,2),rep(3,3),rep(4,6),rep(5,7),rep(6,7),rep(7,6))
mathe_mathe.final = sample(mathe_mathe,size = length(which(studienfach =="Mathe")),
replace = TRUE)
#Idr magen die Informatiker*innen Mathe veniger als derjenigen, die Mathe studieren.
mathe_info = c(rep(7,1), rep(6,1), rep(5,3), rep(4,6), rep(3,7), rep(2,7),rep(1,6))
mathe_info.final = sample(mathe_info,size = length(which(studienfach =="Informatik")),
replace = TRUE)
# Statistik ist analog verteilt
mathe_stat = c(rep(1,2),rep(1,3),rep(3,4),rep(4,7),rep(5,6),rep(6,6),rep(7,5))
mathe_stat.final = sample(mathe_stat,size = length(which(studienfach =="Statistik")),
replace = TRUE)
# Data sience ist auch analog verteilt
mathe_ds = c(rep(1,2),rep(1,3),rep(3,4),rep(4,7),rep(5,6),rep(6,6),rep(7,5))
mathe_ds.final = sample(mathe_stat,size = length(which(studienfach =="Data Science")),
replace = TRUE)
#Am Ende bekommen wir dies Vektor.
Interesse_an_Mathematik = rep(0,100)
Interesse_an_Mathematik[which(studienfach=="Mathe")] = mathe_mathe.final
Interesse_an_Mathematik[which(studienfach=="Informatik")] = mathe_info.final
Interesse_an_Mathematik[which(studienfach=="Data Science")] = mathe_ds.final
Interesse_an_Mathematik[which(studienfach=="Statistik")] = mathe_stat.final
## Interesse_an_programmieren
#Analog zum Inderesse_an_mathematik
prog_mathe = c(rep(7,1), rep(6,1), rep(5,3), rep(4,6), rep(3,7), rep(2,7),rep(1,6))
prog_mathe.final = sample(prog_mathe,size = length(which(studienfach =="Mathe")),
replace = TRUE)
prog_info = c(rep(1,1),rep(1,2),rep(3,3),rep(4,6),rep(5,7),rep(6,7),rep(7,6))
prog_info.final = sample(prog_info,size = length(which(studienfach =="Informatik")),
replace = TRUE)
prog_stat = c(rep(1,2),rep(1,3),rep(3,4),rep(4,7),rep(5,6),rep(6,6),rep(7,5))
prog_stat.final = sample(prog_stat,size = length(which(studienfach =="Statistik")),
replace = TRUE)
prog_ds = c(rep(1,2),rep(1,3),rep(3,4),rep(4,7),rep(5,6),rep(6,6),rep(7,5))
prog_ds.final = sample(prog_stat,size = length(which(studienfach =="Data Science")),
replace = TRUE)
#final:
Interesse_an_Programmieren = rep(0,100)
Interesse_an_Programmieren[which(studienfach=="Mathe")] = prog_mathe.final
Interesse_an_Programmieren[which(studienfach=="Informatik")] = prog_info.final
Interesse_an_Programmieren[which(studienfach=="Data Science")] = prog_ds.final
Interesse_an_Programmieren[which(studienfach=="Statistik")] = prog_stat.final
##Mathe_LK:
mathe_LK = sample(c("Ja","Nein"),100,TRUE)
#_______________________________________________________________________________
#Dataframe:
datensatz=data.frame(Alter = alter ,Studienfach = studienfach ,
Interesse_an_Mathematik = Interesse_an_Mathematik,
Interesse_an_Programmieren = Interesse_an_Programmieren,
Mathe_LK = mathe_LK)
write.csv(datensatz,'Datensatz.csv')
datensatz
#e)
#Eine Funktion fuer die Beschreibung verschiedene ordinale Variablen
setwd("~/Desktop/")
#e)
#Eine Funktion fuer die Beschreibung verschiedene ordinale Variablen
daten  = read.csv(datensatz)
#e)
#Eine Funktion fuer die Beschreibung verschiedene ordinale Variablen
daten  = read.csv(file = datensatz)
#e)
#Eine Funktion fuer die Beschreibung verschiedene ordinale Variablen
daten  = read.csv(file = datensat.csv)
library(readr)
Datensatz <- read_csv("E:/Users/moez/Desktop/Datensatz.csv")
View(Datensatz)
fuer die Beschreibung verschiedene ordinale Variablen
library(readr)
Datensatz <- read_csv("E:/Users/moez/Desktop/Datensatz.csv")
View(Datensatz)
View(Datensatz$Alter)
View(Datensatz$Alter[Datensatz$Alter>26])
View(length(Datensatz$Alter[Datensatz$Alter>26]))
length(Datensatz$Alter[Datensatz$Alter>26])
alterkategorisiert = c(Datensatz$Alter[Datensatz$Alter<20]="jung",
Datensatz$Alter[Datensatz$Alter>=20 && Datensatz$Alter<=26] = "zwichenstufe",
Datensatz$Alter[Datensatz$Alter>26]="alt")
length(Datensatz$Alter[Datensatz$Alter>26])
alterkategorisiert = c(Datensatz$Alter[Datensatz$Alter<20],
Datensatz$Alter[Datensatz$Alter>=20 && Datensatz$Alter<=26],
Datensatz$Alter[Datensatz$Alter>26],)
names(alterkategorisiert)= c("jung","zwichenstufe","alt")
alterkategorisiert = c(Datensatz$Alter[Datensatz$Alter<20],
Datensatz$Alter[Datensatz$Alter>=20 && Datensatz$Alter<=26],
Datensatz$Alter[Datensatz$Alter>26],)
names(alterkategorisiert)= c("jung","zwichenstufe","alt")
alterkategorisiert = c(Datensatz$Alter[Datensatz$Alter<20],
Datensatz$Alter[Datensatz$Alter>=20 && Datensatz$Alter<=26],
Datensatz$Alter[Datensatz$Alter>26],)
names(alterkategorisiert)= c("jung","zwichenstufe","alt")
alterkategorisiert = c(Datensatz$Alter[Datensatz$Alter<20],
Datensatz$Alter[Datensatz$Alter>=20 && Datensatz$Alter<=26],
Datensatz$Alter[Datensatz$Alter>26],)
alterkategorisiert = c(Datensatz$Alter[Datensatz$Alter<20],
Datensatz$Alter[Datensatz$Alter>26],)
alterkategorisiert = c(Datensatz$Alter[Datensatz$Alter<20],
Datensatz$Alter[Datensatz$Alter>=20 && Datensatz$Alter<=26],
Datensatz$Alter[Datensatz$Alter>26],)
alterkategorisiert = c(Datensatz$Alter[Datensatz$Alter<20])
Datensatz$Alter[Datensatz$Alter<20]
zabbi = Datensatz$Alter[Datensatz$Alter<20]
zabbi = Datensatz$Alter
[Datensatz$Alter<20]
zabbi = Datensatz$Alter[Datensatz$Alter<20]
zabbi = length(Datensatz$Alter[Datensatz$Alter<20])
zabbi = Datensatz$Alter[Datensatz$Alter<=20]
zabbi = Datensatz$Alter[Datensatz$Alter<20]
alterkategorisiert = c(length(Datensatz$Alter[Datensatz$Alter<=20]),
length(Datensatz$Alter[Datensatz$Alter>20 && Datensatz$Alter<=26]),
length(Datensatz$Alter[Datensatz$Alter>26]))
names(alterkategorisiert)= c("jung","zwichenstufe","alt")
view(alterkategorisiert)
alterkategorisiert
zabbi = Datensatz$Alter[Datensatz$Alter<=20]
alterkategorisiert = c(length(Datensatz$Alter[Datensatz$Alter<=20]),
length(Datensatz$Alter[Datensatz$Alter>20 & Datensatz$Alter<=26]),
length(Datensatz$Alter[Datensatz$Alter>26]))
names(alterkategorisiert)= c("jung","zwichenstufe","alt")
alterkategorisiert
anzahlinfo = length(Datensatz$Studienfach == "Informatik")
anzahlmathe= length(Datensatz$Studienfach == "Mathe")
anzahlmathe= length(Datensatz$Studienfach = "Mathe")
anzahlinfo
anzahlinfo = length(Datensatz$Studienfach[Datensatz$Studienfach == "Informatik"])
anzahlmathe= length(Datensatz$Studienfach[Datensatz$Studienfach == "Mathe"])
anzahlinfo
anzahlinfo
anzahlmathe
mathekategorisiert = c(length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik <= 2 ]),
length(Datensatz$Alter[Datensatz$Interesse_an_Mathematik ==3 | Datensatz$Interesse_an_Mathematik==4]),
length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik>=5]))
mathekategorisiert_pro = c(((length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik <= 2 ])*anzahlmathe)/100),
((length(Datensatz$Alter[Datensatz$Interesse_an_Mathematik ==3 | Datensatz$Interesse_an_Mathematik==4])*anzahlmathe)/100),
((length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik>=5])*anzahlmathe)/100))
mathekategorisiert = c(length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik <= 2 & Datensatz$Studienfach=="Mathe"]),
length(Datensatz$Alter[(Datensatz$Interesse_an_Mathematik ==3 | Datensatz$Interesse_an_Mathematik==4) & Datensatz$Studienfach=="Mathe"] ),
length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik>=5 & Datensatz$Studienfach=="Mathe"]))
mathekategorisiert_pro = c(((length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik <= 2 & Datensatz$Studienfach=="Mathe" ])*anzahlmathe)/100),
((length(Datensatz$Alter[(Datensatz$Interesse_an_Mathematik ==3 | Datensatz$Interesse_an_Mathematik==4)& Datensatz$Studienfach=="Mathe"])*anzahlmathe)/100),
((length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik>=5& Datensatz$Studienfach=="Mathe"])*anzahlmathe)/100))
Datensatz
level(Datensatz)
lvl(Datensatz)
anzahlmathe
anzahlinfo
mathekategorisiert = c(length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik <= 2 & Datensatz$Studienfach=="Mathe"]),
length(Datensatz$Alter[(Datensatz$Interesse_an_Mathematik ==3 | Datensatz$Interesse_an_Mathematik==4) & Datensatz$Studienfach=="Mathe"] ),
length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik>=5 & Datensatz$Studienfach=="Mathe"]))
mathekategorisiert_pro = c(((length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik <= 2 & Datensatz$Studienfach=="Mathe" ])*100)/anzahlmathe),
((length(Datensatz$Alter[(Datensatz$Interesse_an_Mathematik ==3 | Datensatz$Interesse_an_Mathematik==4)& Datensatz$Studienfach=="Mathe"])*100)/anzahlmathe),
((length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik>=5& Datensatz$Studienfach=="Mathe"])*100)/anzahlmathe))
mathekategorisiert = c(length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik <= 2 & Datensatz$Studienfach=="Mathe"]),
length(Datensatz$Interesse_an_Mathematik[(Datensatz$Interesse_an_Mathematik ==3 | Datensatz$Interesse_an_Mathematik==4) & Datensatz$Studienfach=="Mathe"] ),
length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik>=5 & Datensatz$Studienfach=="Mathe"]))
mathekategorisiert_pro = c(((length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik <= 2 & Datensatz$Studienfach=="Mathe" ])*100)/anzahlmathe),
((length(Datensatz$Interesse_an_Mathematik[(Datensatz$Interesse_an_Mathematik ==3 | Datensatz$Interesse_an_Mathematik==4)& Datensatz$Studienfach=="Mathe"])*100)/anzahlmathe),
((length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik>=5& Datensatz$Studienfach=="Mathe"])*100)/anzahlmathe))
infokategorisiert = c(length(Datensatz$Interesse_an_Programmieren[Datensatz$Interesse_an_Programmieren <= 2 & Datensatz$Studienfach=="Informatik"]),
length(Datensatz$Interesse_an_Programmieren[(Datensatz$Interesse_an_Programmieren==3 | Datensatz$Interesse_an_Programmieren==4) & Datensatz$Studienfach=="Informatik"] ),
length(Datensatz$Interesse_an_Programmieren[Datensatz$Interesse_an_Programmieren>=5 & Datensatz$Studienfach=="Informatik"]))
infokategorisiert_pro = c(((length(Datensatz$Interesse_an_Programmieren[Datensatz$Interesse_an_Programmieren <= 2 & Datensatz$Studienfach=="Informatik" ])*100)/anzahlmathe),
((length(Datensatz$Interesse_an_Programmieren[(Datensatz$Interesse_an_Programmieren ==3 | Datensatz$Interesse_an_Programmieren==4)& Datensatz$Studienfach=="Informatik"])*100)/anzahlmathe),
((length(Datensatz$Interesse_an_Programmieren[Datensatz$Interesse_an_Programmieren>=5& Datensatz$Studienfach=="Informatik"])*100)/anzahlmathe))
infokategorisiert_pro = c(((length(Datensatz$Interesse_an_Programmieren[Datensatz$Interesse_an_Programmieren <= 2 & Datensatz$Studienfach=="Informatik" ])*100)/anzahlinfo),
((length(Datensatz$Interesse_an_Programmieren[(Datensatz$Interesse_an_Programmieren ==3 | Datensatz$Interesse_an_Programmieren==4)& Datensatz$Studienfach=="Informatik"])*100)/anzahlinfo),
((length(Datensatz$Interesse_an_Programmieren[Datensatz$Interesse_an_Programmieren>=5& Datensatz$Studienfach=="Informatik"])*100)/anzahlinfo))
mathekategorisiert = c(length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik <= 2 & Datensatz$Studienfach=="Mathe"]),
length(Datensatz$Interesse_an_Mathematik[(Datensatz$Interesse_an_Mathematik ==3 | Datensatz$Interesse_an_Mathematik==4) & Datensatz$Studienfach=="Mathe"] ),
length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik>=5 & Datensatz$Studienfach=="Mathe"]))
names(mathekategorisiert) = c("niedrig","mittel","hoch")
mathekategorisiert_pro = c(((length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik <= 2 & Datensatz$Studienfach=="Mathe" ])*100)/anzahlmathe),
((length(Datensatz$Interesse_an_Mathematik[(Datensatz$Interesse_an_Mathematik ==3 | Datensatz$Interesse_an_Mathematik==4)& Datensatz$Studienfach=="Mathe"])*100)/anzahlmathe),
((length(Datensatz$Interesse_an_Mathematik[Datensatz$Interesse_an_Mathematik>=5& Datensatz$Studienfach=="Mathe"])*100)/anzahlmathe))
names(mathekategorisiert_pro) = c("niedrig","mittel","hoch")
infokategorisiert = c(length(Datensatz$Interesse_an_Programmieren[Datensatz$Interesse_an_Programmieren <= 2 & Datensatz$Studienfach=="Informatik"]),
length(Datensatz$Interesse_an_Programmieren[(Datensatz$Interesse_an_Programmieren==3 | Datensatz$Interesse_an_Programmieren==4) & Datensatz$Studienfach=="Informatik"] ),
length(Datensatz$Interesse_an_Programmieren[Datensatz$Interesse_an_Programmieren>=5 & Datensatz$Studienfach=="Informatik"]))
names(infokategorisiert) = c("niedrig","mittel","hoch")
infokategorisiert_pro = c(((length(Datensatz$Interesse_an_Programmieren[Datensatz$Interesse_an_Programmieren <= 2 & Datensatz$Studienfach=="Informatik" ])*100)/anzahlinfo),
((length(Datensatz$Interesse_an_Programmieren[(Datensatz$Interesse_an_Programmieren ==3 | Datensatz$Interesse_an_Programmieren==4)& Datensatz$Studienfach=="Informatik"])*100)/anzahlinfo),
((length(Datensatz$Interesse_an_Programmieren[Datensatz$Interesse_an_Programmieren>=5& Datensatz$Studienfach=="Informatik"])*100)/anzahlinfo))
names(infokategorisiert_pro) = c("niedrig","mittel","hoch")
alterdf = data.frame(alterkategorisiert)
alterdf
mathedf = data.frame(mathekategorisiert,mathekategorisiert_pro)
mathedf
mathetab = table(mathekategorisiert,mathekategorisiert_pro)
mathetab
mathetab = table(mathekategorisiert)
mathetab
mathedt_t = as.data.frame(t(as.matrix(mathedf)))
mathedt_t
mathedf_t = as.data.frame(t(as.matrix(mathedf)))
infodf = data.frame(infokategorisiert,infokategorisiert_pro)
infodf_t= as.data.frame(t(as.matrix(infodf)))
infodf_t
infokategorisiert
infodf = data.frame(as.int(infokategorisiert),infokategorisiert_pro)
infodf = data.frame(as.integer(infokategorisiert),infokategorisiert_pro)
infodf_t= as.data.frame(t(as.matrix(infodf)))
infodf_t
alterdf
